---
import Layout from '../layouts/Layout.astro';
import PhotoGallery from '../components/PhotoGallery.astro';
import {frontmatter, Content} from '../content/index.md';

let announcements = []
try {
  // Fetch getAnnouncements data from Horizon CMS (google sheet)
  const res = await fetch("https://script.googleusercontent.com/macros/echo?user_content_key=MsQDgUhTsZX2uvb8B0Rr9up01SJwX-x3cA1VDAXzm-APsqdvEPHYHWt324CyXpZOziAmqSnnToycKBCyik5COTXGVQmISUN2m5_BxDlH2jW0nuo2oDemN9CCS2h10ox_1xSncGQajx_ryfhECjZEnAYbvfmgpOXryj8iMJ7eB_rFEFMLQed1jAPLZ5sa8ravhu6hodRKad78WDE7vEZHDH7OeQ87cXTcdJyBpDeOyWYg1se9SVzKn9z9Jw9Md8uu&lib=MDMznub2mNM29rXfxSJcRzo0TOFMzREza")
  const resJson = await res.json()
  announcements = resJson.data.sort((a,b) => {
    const aDate = new Date(a.date).getTime()
    const bDate = new Date(b.date).getTime()
    return bDate - aDate
  })
} catch (error) {
  announcements = [{error: "Error Loading Announcements. Contact Board Member."}]
}

/**
 * Returns the days between today's date and the given date
 * @param {string} date - Date string to compare with today's date
 * @return {string} 
 */
const daysElapsed = (date:string) => {
  const today = new Date()
  const announcementDate = new Date(date)
  const timeDiff = today.getTime() - announcementDate.getTime()
  const msInDay = (1000 * 3600 * 24)
  const dateDiff = Math.floor(timeDiff / msInDay)
  return dateDiff ? `${dateDiff} days ago` : "Today"
}

/**
 * Truncates string to a certain number of characters
 * @param {number} cutOff - max character count to truncate string to 
 * @return {string} Substring of parent string or the parent string untruncated
 */
String.prototype.truncate = function (cutOff) {
  return this.length > cutOff ? `${this.substring(0,cutOff)}...` : this
}
---

<Layout title="Welcome to Horizon" backgroundColor='bg-barely-grey'>
	<main class="container pt-5">
    <div class="row g-5">
      <!-- Welcome -->
      <div class="col-lg-6">
        <h1 class="text-center mt-1">{frontmatter.welcome}</h1>
        <Content/>
      </div>
      <!-- ANNOUNCEMENTS -->
      <div class="col-lg-6 border rounded bg-slate ">
        <div class="container mt-1">   
          <h2 class="text-center">{frontmatter.listGroup.heading}</h1>
        </div>
        <div class="container list-group p-0 overflow-scroll" style="max-height:500px">
          {
            announcements.map((a, idx) => {
              if(a.error) {
                  return (
                      <div class="text-danger">{a.error}</div>
                  )
              }
              return (
                <a 
                  href="#"
                  type="button" 
                  class={`btn list-group-item list-group-item-action rounded text-start mb-4 p-3 ${!idx ? "bg-primary-subtle":""}`} 
                  style="height: 150px" 
                  data-bs-toggle="modal" 
                  data-bs-target={`#announcement-${a.id}`}
                  >
                  <div class="d-flex w-100 justify-content-between">
                    <h5 class="mb-1">{a.heading}</h5>
                    <small class="d-none d-md-block">{daysElapsed(a.date)}</small>
                  </div>
                  <p class="mt-2">{a.detail.truncate(210)}</p>
                </a>
              )
            })
          }
        </div>
      </div>
      
      <PhotoGallery/>
      
      <!-- MODAL -->
      {
        announcements.map((a) => {
          return (
            <div class="modal fade" id={`announcement-${a.id}`} tabindex="-1" aria-labelledby={`announcement-label-${a.id}`} aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <h1 class="modal-title fs-5" id={`announcement-label-${a.id}`}>{a.heading}</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body text-start">
                    {a.detail}
                  </div>
                </div>
              </div>
            </div>
          )
        })
      }
   
    </div>
  </main>
</Layout>
